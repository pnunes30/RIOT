From b9bae84cda71d39e26a15a3dea9dc3847f384066 Mon Sep 17 00:00:00 2001
From: Philippe Nunes <philippe.nunes@cortus.com>
Date: Fri, 26 Jul 2019 16:14:25 +0200
Subject: [PATCH 7/9] Fix assertion when timeout callback is invoked despite
 the timer event has been cancelled.

With RIOT, it is not possible to dismiss a posted IPC msg. However, it may happen that
the timeout occurs just before canceling the timer event. In this case, the timeout
callback will still be invoked. So, we need to take into account this case.
---
 stack/modules/d7ap/d7anp.c | 3 +++
 stack/modules/d7ap/d7atp.c | 3 +++
 2 files changed, 6 insertions(+)

diff --git a/stack/modules/d7ap/d7anp.c b/stack/modules/d7ap/d7anp.c
index 842f498..43a92e4 100644
--- a/stack/modules/d7ap/d7anp.c
+++ b/stack/modules/d7ap/d7anp.c
@@ -130,6 +130,9 @@ static void foreground_scan_expired(void *arg)
 {
     (void)arg;
 
+    if (d7anp_state == D7ANP_STATE_IDLE)
+        return;
+
     // the FG scan expiration may also happen while Tx is busy (d7anp_state = D7ANP_STATE_TRANSMIT) // TODO validate
     assert(d7anp_state == D7ANP_STATE_FOREGROUND_SCAN || d7anp_state == D7ANP_STATE_TRANSMIT);
     DPRINT("Foreground scan expired @%i", timer_get_counter_value());
diff --git a/stack/modules/d7ap/d7atp.c b/stack/modules/d7ap/d7atp.c
index 1df80c4..e00d2b7 100644
--- a/stack/modules/d7ap/d7atp.c
+++ b/stack/modules/d7ap/d7atp.c
@@ -159,6 +159,9 @@ static void response_period_timeout_handler()
 //    DEBUG_PIN_CLR(2);
     DPRINT("Expiration of the response period");
 
+    if (d7atp_state == D7ATP_STATE_IDLE)
+        return;
+
     assert(d7atp_state == D7ATP_STATE_SLAVE_TRANSACTION_RESPONSE_PERIOD
            || d7atp_state == D7ATP_STATE_SLAVE_TRANSACTION_RECEIVED_REQUEST
            || d7atp_state == D7ATP_STATE_SLAVE_TRANSACTION_SENDING_RESPONSE);
-- 
2.7.4


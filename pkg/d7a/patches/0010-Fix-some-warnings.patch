From 4eb5404b17fa7288fcfbc3a31ad5702469107b82 Mon Sep 17 00:00:00 2001
From: Philippe Nunes <philippe.nunes@cortus.com>
Date: Wed, 25 Mar 2020 14:33:28 +0100
Subject: [PATCH 10/11] Fix some warnings

---
 stack/framework/inc/d7ap_fs.h | 2 +-
 stack/framework/inc/fs.h      | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/stack/framework/inc/d7ap_fs.h b/stack/framework/inc/d7ap_fs.h
index bbbb8e3..e539784 100644
--- a/stack/framework/inc/d7ap_fs.h
+++ b/stack/framework/inc/d7ap_fs.h
@@ -88,7 +88,7 @@ typedef enum {
 } engineering_mode_t;
 
 
-void d7ap_fs_init();
+void d7ap_fs_init(void);
 int d7ap_fs_init_file(uint8_t file_id, const d7ap_fs_file_header_t* file_header, const uint8_t* initial_data);
 
 int d7ap_fs_read_file(uint8_t file_id, uint32_t offset, uint8_t* buffer, uint32_t length);
diff --git a/stack/framework/inc/fs.h b/stack/framework/inc/fs.h
index 8430329..8586483 100644
--- a/stack/framework/inc/fs.h
+++ b/stack/framework/inc/fs.h
@@ -76,7 +76,7 @@ typedef struct  __attribute__((__packed__))
 
 typedef struct __attribute__((__packed__))
 {
-    uint8_t blockdevice_index; // the members of fs_blockdevice_types_t are required, but more blockdevices can be registered in the futute
+    uint8_t blockdevice_index; // the members of fs_blockdevice_types_t are required, but more blockdevices can be registered in the future
     uint32_t length;
     uint32_t addr;
 } fs_file_t;
@@ -88,7 +88,7 @@ typedef struct __attribute__((__packed__))
  * **/
 typedef void (*fs_modified_file_callback_t)(uint8_t file_id);
 
-void fs_init();
+void fs_init(void);
 int fs_init_file(uint8_t file_id, fs_storage_class_t storage, const uint8_t* initial_data, uint32_t length);
 int fs_read_file(uint8_t file_id, uint32_t offset, uint8_t* buffer, uint32_t length);
 int fs_write_file(uint8_t file_id, uint32_t offset, const uint8_t* buffer, uint32_t length);
-- 
2.7.4

